# 主站配置
server {
    listen 80;
    server_name sonicvision.uno www.sonicvision.uno;

    # CORS 設定
    set $cors_origin "";
    if ($http_origin ~ "^https://(.*\.)?sonicvision\.uno$") {
        set $cors_origin $http_origin;
    }
    if ($http_origin ~ "^https://(.*\.)?vercel\.app$") {
        set $cors_origin $http_origin;
    }

    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRFToken' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # 靜態文件
    location /static/ {
        alias /var/www/sonicvision/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # 媒體文件
    location /media/ {
        alias /var/www/sonicvision/media/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # API 請求 - 重定向到 api.sonicvision.uno
    location /api/ {
        return 301 http://api.sonicvision.uno$request_uri;
    }

    # 前端應用 - 重定向到 Vercel
    location / {
        return 301 https://sonicvision-zeta.vercel.app$request_uri;
    }
}

# API 配置
server {
    listen 80;
    server_name api.sonicvision.uno;

    # CORS 設定
    set $cors_origin "";
    if ($http_origin ~ "^https://(.*\.)?sonicvision\.uno$") {
        set $cors_origin $http_origin;
    }
    if ($http_origin ~ "^https://(.*\.)?vercel\.app$") {
        set $cors_origin $http_origin;
    }

    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRFToken' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # API 請求
    location / {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 處理 OPTIONS 請求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRFToken' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # WebSocket 支援
    location /ws/ {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
} 